<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blackblod.web.dao.BGTagArticleMapper">
  <resultMap id="BaseResultMap" type="model.BGTagArticle">
    <id column="oId" jdbcType="VARCHAR" property="oId" />
    <result column="article_oId" jdbcType="VARCHAR" property="article_oId" />
    <result column="tag_oId" jdbcType="VARCHAR" property="tag_oId" />
    <result column="articleCommentCount" jdbcType="INTEGER" property="articleCommentCount" />
    <result column="articleLatestCmtTime" jdbcType="BIGINT" property="articleLatestCmtTime" />
    <result column="redditScore" jdbcType="DOUBLE" property="redditScore" />
    <result column="articlePerfect" jdbcType="INTEGER" property="articlePerfect" />
  </resultMap>
  <sql id="Base_Column_List">
    oId, article_oId, tag_oId, articleCommentCount, articleLatestCmtTime, redditScore, 
    articlePerfect
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from blodgod_tag_article
    where oId = #{oId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from blodgod_tag_article
    where oId = #{oId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="model.BGTagArticle">
    insert into blodgod_tag_article (oId, article_oId, tag_oId, 
      articleCommentCount, articleLatestCmtTime, 
      redditScore, articlePerfect)
    values (#{oId,jdbcType=VARCHAR}, #{article_oId,jdbcType=VARCHAR}, #{tag_oId,jdbcType=VARCHAR}, 
      #{articleCommentCount,jdbcType=INTEGER}, #{articleLatestCmtTime,jdbcType=BIGINT}, 
      #{redditScore,jdbcType=DOUBLE}, #{articlePerfect,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="model.BGTagArticle">
    insert into blodgod_tag_article
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oId != null">
        oId,
      </if>
      <if test="article_oId != null">
        article_oId,
      </if>
      <if test="tag_oId != null">
        tag_oId,
      </if>
      <if test="articleCommentCount != null">
        articleCommentCount,
      </if>
      <if test="articleLatestCmtTime != null">
        articleLatestCmtTime,
      </if>
      <if test="redditScore != null">
        redditScore,
      </if>
      <if test="articlePerfect != null">
        articlePerfect,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oId != null">
        #{oId,jdbcType=VARCHAR},
      </if>
      <if test="article_oId != null">
        #{article_oId,jdbcType=VARCHAR},
      </if>
      <if test="tag_oId != null">
        #{tag_oId,jdbcType=VARCHAR},
      </if>
      <if test="articleCommentCount != null">
        #{articleCommentCount,jdbcType=INTEGER},
      </if>
      <if test="articleLatestCmtTime != null">
        #{articleLatestCmtTime,jdbcType=BIGINT},
      </if>
      <if test="redditScore != null">
        #{redditScore,jdbcType=DOUBLE},
      </if>
      <if test="articlePerfect != null">
        #{articlePerfect,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="model.BGTagArticle">
    update blodgod_tag_article
    <set>
      <if test="article_oId != null">
        article_oId = #{article_oId,jdbcType=VARCHAR},
      </if>
      <if test="tag_oId != null">
        tag_oId = #{tag_oId,jdbcType=VARCHAR},
      </if>
      <if test="articleCommentCount != null">
        articleCommentCount = #{articleCommentCount,jdbcType=INTEGER},
      </if>
      <if test="articleLatestCmtTime != null">
        articleLatestCmtTime = #{articleLatestCmtTime,jdbcType=BIGINT},
      </if>
      <if test="redditScore != null">
        redditScore = #{redditScore,jdbcType=DOUBLE},
      </if>
      <if test="articlePerfect != null">
        articlePerfect = #{articlePerfect,jdbcType=INTEGER},
      </if>
    </set>
    where oId = #{oId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.BGTagArticle">
    update blodgod_tag_article
    set article_oId = #{article_oId,jdbcType=VARCHAR},
      tag_oId = #{tag_oId,jdbcType=VARCHAR},
      articleCommentCount = #{articleCommentCount,jdbcType=INTEGER},
      articleLatestCmtTime = #{articleLatestCmtTime,jdbcType=BIGINT},
      redditScore = #{redditScore,jdbcType=DOUBLE},
      articlePerfect = #{articlePerfect,jdbcType=INTEGER}
    where oId = #{oId,jdbcType=VARCHAR}
  </update>
</mapper>